-------------------------------------------------------------------------------
-- Descriptive metadata
-------------------------------------------------------------------------------

componentName = "Hall-sensor Component"
componentFullName = "Hall-sensor Interface Function Library"
alternativeNames = { }
componentDescription = ""
componentVersion = "1v0"

-------------------------------------------------------------------------------
-- Parameter descriptions.
-------------------------------------------------------------------------------

configPoints =
{
  NoOfMotors= {
    short   = "Number Of Motors",
    help    = "Number of Motors attached to Motor Power Board, Currently set in app_global.h",
    long    = "",
    units   = "",
    define  = "NUMBER_OF_MOTORS",
    type    = "int",
    options = {1,2},
    resourceUsageFlags = {"linear"},
    default = 2
  },
  ReferenceFrequency= {
    short   = "Platform Reference Frequency",
    help    = "This must macth the value set in the Platform Configuration File (.XN), Currently set in app_global.h",
    long    = "",
    units   = "",
    define  = "PLATFORM_REFERENCE_MHZ",
    type    = "int",
    options = {100,250,500},
    resourceUsageFlags = {"linear"},
    default = 100 
  },
  HALL_Filter=
  {
    short   = "Filters Hall Velocity Parameter (NOT Implemented)",
    help    = "Reduces noise component in raw data from Hall sensors, Currently set in app_global.h",
    long    = "",
    units   = "",
    define  = "HALL_FILTER",
    type    = "int",
    options = {0,1}, 
    resourceUsageFlags = {"orthogonal"},
    default = 0
  },
}

derivedValues = {}

ports = {
  p4_hall = {
    short   = "Hall input data port",
    long    = "raw Hall-sensor data from Motor",
    help    = "",
    width   = 4
  },
}

channels = {
  c_hall = {
    short = "Connects Hall Client and Server",
    type = "streaming",
    long  = "Client requests Hall parameters, Server transmits structure containing newest Hall parameters",
    help  = "",
  },
}        

function getConfigStatus()
  local status = "Valid Configuration"
  local issues = {}

  -- Everything *should* be valid...

  return status, issues
end

-------------------------------------------------------------------------------
-- Source generation functions
-------------------------------------------------------------------------------

generatedCode = {
	includes = 
	{ 
		"module_foc_hall_example_conf.h"
	},
  globals = "",
  body = ""
}

api = {'foc_hall_get_parameters','foc_hall_do_multiple'}

files = {["module_foc_hall/src/module_foc_hall_example_conf.h"] = "src/app_global.h"}
